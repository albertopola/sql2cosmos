{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSql",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "CosmosDbContainer001",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "MapDrifted1"
				},
				{
					"name": "MapDrifted2",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT IdPersona, Ore from dbo.CantiereOre',",
				"     format: 'query') ~> source1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT c.id, c.idpersona, c.name FROM c WHERE c.modelname=\\'staff\\'',",
				"     format: 'documentQuery',",
				"     systemColumns: false) ~> source2",
				"MapDrifted1, MapDrifted2 join(toString(MapDrifted1@IdPersona) == MapDrifted2@idpersona,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source1 derive(IdPersona = toInteger(byName('IdPersona')),",
				"          Ore = toDecimal(byName('Ore'))) ~> MapDrifted1",
				"source2 derive(id = toString(byName('id')),",
				"          idpersona = toString(byName('idpersona')),",
				"          name = toString(byName('name'))) ~> MapDrifted2",
				"join1 derive(idstaff = id) ~> derivedColumn1"
			]
		}
	}
}