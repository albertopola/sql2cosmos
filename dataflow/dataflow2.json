{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSql",
						"type": "DatasetReference"
					},
					"name": "SQLCantiereOre"
				},
				{
					"dataset": {
						"referenceName": "CosmosDbContainer001",
						"type": "DatasetReference"
					},
					"name": "CosmosDBStaff1"
				},
				{
					"dataset": {
						"referenceName": "AzureSql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "MapDrifted3",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "MapDrifted4",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "join1"
				},
				{
					"name": "MapDrifted5",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "unpivot1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select IdCantiere, IdPersona, Ore from dbo.CantiereOre\\n',",
				"     format: 'query') ~> SQLCantiereOre",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT c.id, c.idpersona FROM c WHERE c.modelname = \\'staff\\'',",
				"     format: 'documentQuery',",
				"     systemColumns: false) ~> CosmosDBStaff1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select * from dbo.Cantiere',",
				"     format: 'query') ~> source1",
				"SQLCantiereOre derive(IdCantiere = toInteger(byName('IdCantiere')),",
				"          IdPersona = toInteger(byName('IdPersona')),",
				"          Ore = toDecimal(byName('Ore'))) ~> MapDrifted3",
				"CosmosDBStaff1 derive(id = toString(byName('id')),",
				"          idpersona = toString(byName('idpersona'))) ~> MapDrifted4",
				"MapDrifted3, MapDrifted4 join(toString(MapDrifted3@IdPersona) == MapDrifted4@idpersona,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source1 derive(IdCantiere = toInteger(byName('IdCantiere')),",
				"          IdAppalto = toInteger(byName('IdAppalto')),",
				"          Data = toTimestamp(byName('Data')),",
				"          Descrizione = toString(byName('Descrizione')),",
				"          Pioggia = toBoolean(byName('Pioggia')),",
				"          OreAutocarro = toDecimal(byName('OreAutocarro')),",
				"          UserId = toString(byName('UserId')),",
				"          datetime = toBinary(byName('datetime'))) ~> MapDrifted5",
				"select1, join1 join(select1@IdCantiere == MapDrifted3@IdCantiere,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"unpivot1 join(joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"select2 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"MapDrifted5 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"join3 unpivot(output(",
				"          ",
				"     ),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1"
			]
		}
	}
}